apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: {{ .Values.namespace }}
---
apiVersion: v1
kind: Secret
metadata:
  name: jenkins-secret
  annotations:
    kubernetes.io/service-account.name: jenkins
type: kubernetes.io/service-account-token
         
         
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: app-role
  namespace: {{ .Values.namespace }}
rules:
  - apiGroups:
        - ""
        - apps
        - autoscaling
        - batch
        - extensions
        - policy
        - rbac.authorization.k8s.io
    resources:
      - pods
      - componentstatuses
      - configmaps
      - daemonsets
      - deployments
      - events
      - endpoints
      - horizontalpodautoscalers
      - ingress
      - jobs
      - limitranges
      - namespaces
      - nodes
      - pods
      - persistentvolumes
      - persistentvolumeclaims
      - resourcequotas
      - replicasets
      - replicationcontrollers
      - serviceaccounts
      - services
      - secrets
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app-rolebinding
  namespace: {{ .Values.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: app-role 
subjects:
- namespace: {{ .Values.namespace }}
  kind: ServiceAccount
  name: jenkins

---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: [rol de IAM ]
  name: mysql-ksa-sa
  namespace: {{ .Values.namespace}}
---
apiVersion: v1
data:
  .dockerconfigjson: [token de auth de docker]
kind: Secret
metadata:
  name: regcred
  namespace: {{ .Values.namespace}}
type: kubernetes.io/dockerconfigjson

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: service-account-global-access
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: {{ .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: cluster-admin # Puedes ajustar este rol seg√∫n los permisos necesarios
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-access-all-services
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list", "watch"]
---
# cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-access-all-services-binding
subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: jenkins-cal # Reemplaza con el nombre de tu namespace
roleRef:
  kind: ClusterRole
  name: pod-access-all-services
  apiGroup: rbac.authorization.k8s.io

